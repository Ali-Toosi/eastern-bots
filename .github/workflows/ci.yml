name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Build the Stack
        run:  docker-compose -f local.yml build

      - name: Run DB Migrations
        run:  docker-compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run:  docker-compose -f local.yml run django pytest

      - name: Tear down the Stack
        run:  docker-compose -f local.yml down

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ linter ]
    if: ${{ !contains(github.event.head_commit.message, '#skip-deploy') && github.ref == 'refs/heads/main' }}
    steps:
      - name: Execute deploy command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p eastern-bots
            cd eastern-bots
            cd repo/.. || git clone https://github.com/Ali-Toosi/eastern-bots.git repo
            cd repo/ || exit
            git pull
            rm -r .envs
            mkdir -p .envs/.production/
            echo '${{ secrets.ENV_DJANGO }}' | base64 -d > .envs/.production/.django
            echo '${{ secrets.ENV_POSTGRES }}' | base64 -d > .envs/.production/.postgres
            docker-compose -f production.yml up --build -d
